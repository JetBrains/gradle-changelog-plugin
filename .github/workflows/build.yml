name: Build
on: [push, pull_request]

jobs:
  gradleValidation:
    name: Gradle Wrapper
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.3

  test:
    name: Test
    needs: gradleValidation
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
          - os: ubuntu-latest
          - os: macos-latest

    steps:

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Run Linters and Test
        run: ./gradlew check

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.properties.outputs.name }}
      version: ${{ steps.properties.outputs.version }}
      changelog: ${{ steps.properties.outputs.changelog }}
      artifact: ${{ steps.properties.outputs.artifact }}
    steps:

      - name: Setup Java
        uses: actions/setup-java@v2
        with:
          distribution: zulu
          java-version: 8

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts', 'gradle.properties') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2.1.4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Export Properties
        id: properties
        shell: bash
        run: |
          NAME=$(./gradlew properties --console=plain -q | grep "^name:" | awk '{printf $2}')
          VERSION=$(./gradlew properties --console=plain -q | grep "^version:" | awk '{printf $2}')
          ARTIFACT="$NAME-$VERSION.jar"
          CHANGELOG=$(./gradlew getChangelog --unreleased --no-header --console=plain -q)
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"

          echo "::set-output name=version::$VERSION"
          echo "::set-output name=name::$NAME"
          echo "::set-output name=artifact::$ARTIFACT"
          echo "::set-output name=changelog::$CHANGELOG"

      - name: Build Plugin
        run: ./gradlew build

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: plugin-artifact
          path: ./build/libs/${{ steps.properties.outputs.artifact }}

  releaseDraft:
    name: Release Draft
    if: github.ref == 'refs/heads/main'
    needs: build
    runs-on: ubuntu-latest
    steps:

      - name: Fetch Sources
        uses: actions/checkout@v2

      - name: Remove Old Release Drafts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          curl -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases \
            | tr '\r\n' ' ' \
            | jq '.[] | select(.draft == true) | .id' \
            | xargs -I '{}' \
          curl -X DELETE -H "Authorization: Bearer $GITHUB_TOKEN" https://api.github.com/repos/$GITHUB_REPOSITORY/releases/{}

      - name: Create Release Draft
        id: createDraft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.build.outputs.version }}
          release_name: v${{ needs.build.outputs.version }}
          body: ${{ needs.build.outputs.changelog }}
          draft: true

      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: plugin-artifact

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.createDraft.outputs.upload_url }}
          asset_path: ./${{ needs.build.outputs.artifact }}
          asset_name: ${{ needs.build.outputs.artifact }}
          asset_content_type: application/zip
