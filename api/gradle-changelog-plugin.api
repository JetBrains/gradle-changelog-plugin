public final class org/jetbrains/changelog/Changelog {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlin/text/Regex;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/changelog/ChangelogSectionUrlBuilder;Ljava/lang/String;)V
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlin/text/Regex;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/changelog/ChangelogSectionUrlBuilder;Ljava/lang/String;)Lorg/jetbrains/changelog/Changelog;
	public static synthetic fun copy$default (Lorg/jetbrains/changelog/Changelog;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;Lkotlin/text/Regex;Ljava/lang/String;Ljava/lang/String;Lorg/jetbrains/changelog/ChangelogSectionUrlBuilder;Ljava/lang/String;ILjava/lang/Object;)Lorg/jetbrains/changelog/Changelog;
	public fun equals (Ljava/lang/Object;)Z
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun getIntroduction ()Ljava/lang/String;
	public final fun getItems ()Ljava/util/Map;
	public final fun getLatest ()Lorg/jetbrains/changelog/Changelog$Item;
	public final fun getLinks ()Ljava/util/Map;
	public final fun getPreTitle ()Ljava/lang/String;
	public final fun getReleasedItems ()Ljava/util/Collection;
	public final fun getTitle ()Ljava/lang/String;
	public final fun getUnreleasedItem ()Lorg/jetbrains/changelog/Changelog$Item;
	public final fun has (Ljava/lang/String;)Z
	public fun hashCode ()I
	public final fun render (Lorg/jetbrains/changelog/Changelog$OutputType;)Ljava/lang/String;
	public final fun renderItem (Lorg/jetbrains/changelog/Changelog$Item;Lorg/jetbrains/changelog/Changelog$OutputType;)Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/changelog/Changelog$Item {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/lang/String;Ljava/lang/String;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;Ljava/lang/String;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/lang/String;
	public final fun component3 ()Ljava/lang/String;
	public final fun component4 ()Z
	public final fun copy (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;)Lorg/jetbrains/changelog/Changelog$Item;
	public static synthetic fun copy$default (Lorg/jetbrains/changelog/Changelog$Item;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/util/Map;ILjava/lang/Object;)Lorg/jetbrains/changelog/Changelog$Item;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getHeader ()Ljava/lang/String;
	public final fun getSections ()Ljava/util/Map;
	public final fun getSummary ()Ljava/lang/String;
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isUnreleased ()Z
	public final fun plus (Ljava/util/List;)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun plus (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;
	public final fun plus (Lorg/jetbrains/changelog/Changelog$Item;)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun setVersion (Ljava/lang/String;)V
	public final fun toHTML ()Ljava/lang/String;
	public final fun toPlainText ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
	public final fun toText ()Ljava/lang/String;
	public final fun withEmptySections (Z)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun withFilter (Lkotlin/jvm/functions/Function1;)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun withHeader (Z)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun withLinkedHeader (Z)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun withLinks (Z)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun withSummary (Z)Lorg/jetbrains/changelog/Changelog$Item;
}

public final class org/jetbrains/changelog/Changelog$OutputType : java/lang/Enum {
	public static final field HTML Lorg/jetbrains/changelog/Changelog$OutputType;
	public static final field MARKDOWN Lorg/jetbrains/changelog/Changelog$OutputType;
	public static final field PLAIN_TEXT Lorg/jetbrains/changelog/Changelog$OutputType;
	public static fun valueOf (Ljava/lang/String;)Lorg/jetbrains/changelog/Changelog$OutputType;
	public static fun values ()[Lorg/jetbrains/changelog/Changelog$OutputType;
}

public final class org/jetbrains/changelog/ChangelogPlugin : org/gradle/api/Plugin {
	public fun <init> ()V
	public synthetic fun apply (Ljava/lang/Object;)V
	public fun apply (Lorg/gradle/api/Project;)V
}

public final class org/jetbrains/changelog/ChangelogPlugin$inlined$sam$i$org_gradle_api_Action$0 : org/gradle/api/Action {
	public fun <init> (Lkotlin/jvm/functions/Function1;)V
	public final synthetic fun execute (Ljava/lang/Object;)V
}

public final class org/jetbrains/changelog/ChangelogPluginConstants {
	public static final field CHANGELOG_FILE_NAME Ljava/lang/String;
	public static final field DATE_PATTERN Ljava/lang/String;
	public static final field DEFAULT_TITLE Ljava/lang/String;
	public static final field EXTENSION_NAME Ljava/lang/String;
	public static final field GET_CHANGELOG_TASK_NAME Ljava/lang/String;
	public static final field GROUP_NAME Ljava/lang/String;
	public static final field INITIALIZE_CHANGELOG_TASK_NAME Ljava/lang/String;
	public static final field INSTANCE Lorg/jetbrains/changelog/ChangelogPluginConstants;
	public static final field ITEM_PREFIX Ljava/lang/String;
	public static final field LEVEL_1 Ljava/lang/String;
	public static final field LEVEL_2 Ljava/lang/String;
	public static final field LEVEL_3 Ljava/lang/String;
	public static final field MINIMAL_SUPPORTED_GRADLE_VERSION Ljava/lang/String;
	public static final field PATCH_CHANGELOG_TASK_NAME Ljava/lang/String;
	public static final field PLUGIN_NAME Ljava/lang/String;
	public static final field UNRELEASED_TERM Ljava/lang/String;
	public final fun getGROUPS ()Ljava/util/List;
	public final fun getSEM_VER_REGEX ()Lkotlin/text/Regex;
}

public abstract class org/jetbrains/changelog/ChangelogPluginExtension {
	public fun <init> ()V
	public final fun get (Ljava/lang/String;)Lorg/jetbrains/changelog/Changelog$Item;
	public final fun getAll ()Ljava/util/Map;
	public abstract fun getCombinePreReleases ()Lorg/gradle/api/provider/Property;
	public final fun getGetHeaderParserRegex ()Lorg/gradle/api/provider/Provider;
	public abstract fun getGroups ()Lorg/gradle/api/provider/ListProperty;
	public abstract fun getHeader ()Lorg/gradle/api/provider/Property;
	public abstract fun getHeaderParserRegex ()Lorg/gradle/api/provider/Property;
	public abstract fun getInstance ()Lorg/gradle/api/provider/Property;
	public abstract fun getIntroduction ()Lorg/gradle/api/provider/Property;
	public abstract fun getItemPrefix ()Lorg/gradle/api/provider/Property;
	public abstract fun getKeepUnreleasedSection ()Lorg/gradle/api/provider/Property;
	public final fun getLatest ()Lorg/jetbrains/changelog/Changelog$Item;
	public abstract fun getLineSeparator ()Lorg/gradle/api/provider/Property;
	public final fun getOrNull (Ljava/lang/String;)Lorg/jetbrains/changelog/Changelog$Item;
	public abstract fun getPatchEmpty ()Lorg/gradle/api/provider/Property;
	public abstract fun getPath ()Lorg/gradle/api/provider/Property;
	public abstract fun getPreTitle ()Lorg/gradle/api/provider/Property;
	public abstract fun getRepositoryUrl ()Lorg/gradle/api/provider/Property;
	public abstract fun getSectionUrlBuilder ()Lorg/gradle/api/provider/Property;
	public abstract fun getTitle ()Lorg/gradle/api/provider/Property;
	public final fun getUnreleased ()Lorg/jetbrains/changelog/Changelog$Item;
	public abstract fun getUnreleasedTerm ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	public abstract fun getVersionPrefix ()Lorg/gradle/api/provider/Property;
	public final fun has (Ljava/lang/String;)Z
	public final fun render (Lorg/jetbrains/changelog/Changelog$OutputType;)Ljava/lang/String;
	public static synthetic fun render$default (Lorg/jetbrains/changelog/ChangelogPluginExtension;Lorg/jetbrains/changelog/Changelog$OutputType;ILjava/lang/Object;)Ljava/lang/String;
	public final fun renderItem (Lorg/jetbrains/changelog/Changelog$Item;Lorg/jetbrains/changelog/Changelog$OutputType;)Ljava/lang/String;
	public static synthetic fun renderItem$default (Lorg/jetbrains/changelog/ChangelogPluginExtension;Lorg/jetbrains/changelog/Changelog$Item;Lorg/jetbrains/changelog/Changelog$OutputType;ILjava/lang/Object;)Ljava/lang/String;
}

public abstract interface class org/jetbrains/changelog/ChangelogSectionUrlBuilder {
	public abstract fun build (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;
}

public final class org/jetbrains/changelog/ExtensionsKt {
	public static final fun date (Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun date$default (Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun markdownToHTML (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
	public static synthetic fun markdownToHTML$default (Ljava/lang/String;Ljava/lang/String;ILjava/lang/Object;)Ljava/lang/String;
	public static final fun markdownToPlainText (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
}

public final class org/jetbrains/changelog/PlainTextTagRenderer : org/intellij/markdown/html/HtmlGenerator$TagRenderer {
	public fun <init> ()V
	public synthetic fun closeTag (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
	public fun closeTag (Ljava/lang/CharSequence;)Ljava/lang/String;
	public synthetic fun openTag (Lorg/intellij/markdown/ast/ASTNode;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;Z)Ljava/lang/CharSequence;
	public fun openTag (Lorg/intellij/markdown/ast/ASTNode;Ljava/lang/CharSequence;[Ljava/lang/CharSequence;Z)Ljava/lang/String;
	public fun printHtml (Ljava/lang/CharSequence;)Ljava/lang/CharSequence;
}

public final class org/jetbrains/changelog/Version : java/lang/Comparable {
	public static final field Companion Lorg/jetbrains/changelog/Version$Companion;
	public fun <init> ()V
	public fun <init> (IIILjava/lang/String;)V
	public synthetic fun <init> (IIILjava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun compareTo (Ljava/lang/Object;)I
	public fun compareTo (Lorg/jetbrains/changelog/Version;)I
	public fun equals (Ljava/lang/Object;)Z
	public final fun getMajor ()I
	public final fun getMinor ()I
	public final fun getPatch ()I
	public final fun getVersion ()Ljava/lang/String;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class org/jetbrains/changelog/Version$Companion {
	public final fun parse (Ljava/lang/String;)Lorg/jetbrains/changelog/Version;
}

public final class org/jetbrains/changelog/exceptions/HeaderParseException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;)V
}

public final class org/jetbrains/changelog/exceptions/MissingReleaseNoteException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/jetbrains/changelog/exceptions/MissingVersionException : java/lang/Exception {
	public fun <init> (Ljava/lang/String;)V
}

public final class org/jetbrains/changelog/exceptions/VersionNotSpecifiedException : java/lang/Exception {
	public fun <init> ()V
}

public final class org/jetbrains/changelog/flavours/ChangelogFlavourDescriptor : org/intellij/markdown/flavours/gfm/GFMFlavourDescriptor {
	public fun <init> ()V
	public fun createHtmlGeneratingProviders (Lorg/intellij/markdown/parser/LinkMap;Ljava/net/URI;)Ljava/util/Map;
}

public final class org/jetbrains/changelog/flavours/PlainTextFlavourDescriptor : org/intellij/markdown/flavours/gfm/GFMFlavourDescriptor {
	public fun <init> (Ljava/lang/String;)V
	public fun createHtmlGeneratingProviders (Lorg/intellij/markdown/parser/LinkMap;Ljava/net/URI;)Ljava/util/Map;
}

public abstract class org/jetbrains/changelog/tasks/BaseChangelogTask : org/gradle/api/DefaultTask {
	public fun <init> ()V
	public abstract fun getChangelog ()Lorg/gradle/api/provider/Property;
	public abstract fun getUnreleasedTerm ()Lorg/gradle/api/provider/Property;
}

public abstract class org/jetbrains/changelog/tasks/GetChangelogTask : org/jetbrains/changelog/tasks/BaseChangelogTask {
	public fun <init> ()V
	public abstract fun getInputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun getNoEmptySections ()Z
	public final fun getNoHeader ()Z
	public final fun getNoLinks ()Z
	public final fun getNoSummary ()Z
	public final fun getProjectVersion ()Ljava/lang/String;
	public final fun getUnreleased ()Z
	public final fun run ()V
	public final fun setNoEmptySections (Z)V
	public final fun setNoHeader (Z)V
	public final fun setNoLinks (Z)V
	public final fun setNoSummary (Z)V
	public final fun setProjectVersion (Ljava/lang/String;)V
	public final fun setUnreleased (Z)V
}

public abstract class org/jetbrains/changelog/tasks/InitializeChangelogTask : org/jetbrains/changelog/tasks/BaseChangelogTask {
	public fun <init> ()V
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public final fun run ()V
}

public abstract class org/jetbrains/changelog/tasks/PatchChangelogTask : org/jetbrains/changelog/tasks/BaseChangelogTask {
	public fun <init> ()V
	public abstract fun getCombinePreReleases ()Lorg/gradle/api/provider/Property;
	public abstract fun getHeader ()Lorg/gradle/api/provider/Property;
	public abstract fun getInputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getKeepUnreleasedSection ()Lorg/gradle/api/provider/Property;
	public abstract fun getOutputFile ()Lorg/gradle/api/file/RegularFileProperty;
	public abstract fun getPatchEmpty ()Lorg/gradle/api/provider/Property;
	public final fun getReleaseNote ()Ljava/lang/String;
	public abstract fun getVersion ()Lorg/gradle/api/provider/Property;
	public final fun run ()V
	public final fun setReleaseNote (Ljava/lang/String;)V
}

